plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.dagger.hilt.android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'


}

android {
    namespace 'com.ayesha.demorickandmortyapp'

    compileSdk = 34

    defaultConfig {
        applicationId = "com.ayesha.demorickandmortyapp"
        minSdk = 23
        targetSdk = 34
        versionCode = 1
        versionName = "1.0"
        multiDexEnabled = true
        testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary = true
        }
        kapt {
            arguments {
                arg("room.schemaLocation", "$projectDir/schemas")
            }
        }
    }

    packagingOptions {
        resources {
            excludes += "/META-INF/{AL2.0,LGPL2.1}"
        }
    }

    buildTypes {
        getByName("release") {
            proguardFiles(
                    getDefaultProguardFile("proguard-android-optimize.txt"),
                    "proguard-rules.pro"
            )
        }
    }
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
    buildFeatures {
        compose = true
    }

    composeOptions {
//        kotlinCompilerExtensionVersion '1.3.2'
        kotlinCompilerExtensionVersion '1.3.2'
    }
}

dependencies {
//     var  composeBom = platform(libs.androidx.compose.bom)
//    implementation(composeBom)
//    androidTestImplementation(composeBom)
//    implementation(libs.androidx.compose.foundation)
//
//    implementation(libs.androidx.activity.compose)
//    implementation(libs.androidx.compose.ui)
//    implementation(libs.androidx.compose.material)
//    implementation(libs.androidx.compose.ui.tooling.preview)
//    debugImplementation(libs.androidx.compose.ui.tooling)
//
//    implementation(libs.androidx.compose.material3.windowSizeClass)
//    implementation(libs.androidx.activity.ktx)
//    implementation(libs.androidx.ktx)
//    implementation(libs.androidx.appcompat)
//    implementation(libs.androidx.constraintlayout.compose)
//
//    //ViewModels
//    implementation(libs.androidx.lifecycle.viewmodel.compose)
//    implementation(libs.androidx.lifecycle.viewmodel.savedstate)
//    implementation(libs.androidx.lifecycle.runtime.ktx)
//    implementation(libs.androidx.lifecycle.viewmodel.ktx)
//    implementation(libs.androidx.navigation.compose)
//
//    //Hilt
//    // to libs
    implementation(libs.hilt.android)
    implementation platform('androidx.compose:compose-bom:2022.10.00')
    implementation 'androidx.compose.ui:ui-graphics'
    implementation platform('androidx.compose:compose-bom:2022.10.00')
    androidTestImplementation platform('androidx.compose:compose-bom:2022.10.00')
    androidTestImplementation platform('androidx.compose:compose-bom:2022.10.00')
    kapt(libs.hilt.compiler)
    implementation(libs.androidx.hilt.navigation.compose)
//
//    // Retrofit
//    implementation(libs.retrofit.core)
    implementation(libs.retrofit.gson)
//    implementation(libs.okhttp.logging)
//    implementation(libs.okhttp)
//
//    //DataStore
//    implementation(libs.androidx.dataStore.core)
//    implementation(libs.androidx.dataStore.preferences)
//
//    //Accompanist
    implementation(libs.accompanist.insets)
    implementation(libs.accompanist.pager)
    implementation(libs.accompanist.pager.indicators)
    implementation(libs.accompanist.placeholder)
    implementation(libs.accompanist.swiperefresh)
//    implementation(libs.accompanist.navigation.animation)
//
//    //Room
    implementation(libs.room.runtime)
    kapt(libs.room.compiler)

    // optional - Kotlin Extensions and Coroutines support for Room
    implementation(libs.room.ktx)
    implementation(libs.room.runtime)
//
//    //Coil
//    implementation(libs.coil.kt.compose)
//
//    //Paging 3.0
//    implementation(libs.androidx.paging.compose)
//
//    //Json
//    implementation(libs.kotlinx.serialization.json)
//
//    //Chucker chucker_version
    debugImplementation(libs.chucker)
    releaseImplementation(libs.chucker.no.op)
//
    //Splash
    implementation(libs.androidx.core.splashscreen)
//
//    implementation(libs.lottie.compose)
//    implementation(libs.shimmer.compose)
//
//    implementation(libs.androidx.tracing.tracing)
//    implementation(libs.androidx.tracing.ktx)
//
//    // UI Tests
//    androidTestImplementation(libs.androidx.compose.ui.test)
//    debugImplementation(libs.androidx.compose.ui.testManifest)
//
//    testImplementation(libs.junit4)
//    androidTestImplementation(libs.androidx.test.ext)
//    androidTestImplementation(libs.androidx.test.espresso.core)
var compose_version = '1.2.1'

    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'
    implementation 'androidx.activity:activity-compose:1.5.1'
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation 'androidx.compose.material3:material3:1.0.0-beta01'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"

    // Accompanist ViewPager
    implementation  "com.google.accompanist:accompanist-pager:0.29.0-alpha"

    // Exo Player Library
    implementation "com.google.android.exoplayer:exoplayer:2.18.2"

//    //Dagger - Hilt
//    implementation "com.google.dagger:hilt-android:2.44.2"
//    kapt "com.google.dagger:hilt-android-compiler:2.44.2"
//
    //kapt "androidx.hilt:hilt-compiler:1.0.0"
   // implementation 'androidx.hilt:hilt-navigation-compose:1.0.0'

    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-moshi:2.9.0'
    implementation "com.squareup.okhttp3:okhttp:5.0.0-alpha.3"
    implementation "com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.3"

    //View model
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:2.5.1"

    //Coil image loading lib
    implementation "io.coil-kt:coil-compose:2.2.2"
    implementation"com.valentinilk.shimmer:compose-shimmer:1.0.0"
    implementation "androidx.constraintlayout:constraintlayout-compose:1.0.1"
    implementation 'androidx.navigation:navigation-fragment-ktx:2.6.0'
    implementation "androidx.navigation:navigation-ui-ktx:2.6.0"
//    implementation "com.google.accompanist:accompanist-navigation-material:0.24.3-alpha"
    implementation "com.google.accompanist:accompanist-navigation-animation:0.28.0"
    implementation "androidx.navigation:navigation-compose:2.7.6"
//    implementation(libs.androidx.core.splashscreen)
//
//    implementation(libs.lottie.compose)
    def paging_version = "3.2.1"

    implementation "androidx.paging:paging-runtime:$paging_version"

    // alternatively - without Android dependencies for tests
    testImplementation "androidx.paging:paging-common:$paging_version"

    // optional - RxJava2 support
    implementation "androidx.paging:paging-rxjava2:$paging_version"

    // optional - RxJava3 support
    implementation "androidx.paging:paging-rxjava3:$paging_version"

    // optional - Guava ListenableFuture support
    implementation "androidx.paging:paging-guava:$paging_version"

    // optional - Jetpack Compose integration
    implementation "androidx.paging:paging-compose:3.3.0-alpha02"
}

// Allow references to generated code
kapt {
    correctErrorTypes = true
}